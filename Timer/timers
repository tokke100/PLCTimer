class TON {

  private:
    unsigned long currentMillis;
    unsigned long previousMillis;

  public:
    int pre;
    int acc;
    bool tt;
    bool dn;
    bool en;
    bool ret;

    TON (int p, bool r) {
      pre = p;
      ret = r;
    }

    void loop() {
      if (en && !dn){
        tt = true;
        if (previousMillis == 0){
          currentMillis = millis();
          previousMillis = currentMillis;
        }
        else {
          currentMillis = millis();
        }
        acc = currentMillis - previousMillis;
        if(acc >= pre){
          dn = true;
          tt = false;
        }
      }
      if (ret){
        if (!en && acc >= pre){
          previousMillis = 0;
          acc = 0;
          dn = false;
          tt = false;
        } else if(!en && acc < pre){
          tt = false;
          previousMillis = millis()-acc;
        }
      } else {
        if (!en){
          previousMillis = 0;
          acc = 0;
          dn = false;
          tt = false;
        }
      }
      
    } 
};

class TOF {
  private:
    unsigned long currentMillis;
    unsigned long previousMillis;

  public:
    int pre;
    int acc;
    bool tt;
    bool dn;
    bool en;


    TOF(int p){
      pre = p;
    }

    void loop(){
      if(en && !dn){
        dn = true;
        tt = false;
        acc = 0;
        previousMillis = 0;
      }

      if(dn && !en){
        tt = true;
        if (previousMillis == 0){
          currentMillis = millis();
          previousMillis = currentMillis;
        }
        else {
          currentMillis = millis();
        }
        acc = currentMillis - previousMillis;
        if(acc >= pre){
          dn = false;
          tt = false;
          previousMillis = 0;
          acc = 0;
        }
      }
    }
};